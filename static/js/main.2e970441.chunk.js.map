{"version":3,"sources":["GlobalStyles.js","component/fs.js","Loader.js","component/InputBar.jsx","component/TodoDateRow.jsx","component/Todo.jsx","component/TodoList.jsx","component/CompletedList.jsx","component/Container.js","index.js"],"names":["globalStyles","createGlobalStyle","reset","compare","key","a","b","filter","f","iter","arr","push","parseAndSet","setFunc","dataName","JSON","parse","makeDate","date","dateObj","Date","year","getFullYear","month","getMonth","day","getDate","console","log","Loader","type","color","height","width","InputBar","props","onAddNewTodoText","useState","inputText","setInputText","handleAddNewTodoText","e","preventDefault","className","onSubmit","placeholder","value","onChange","target","id","name","onClick","memo","TodoDateRow","today","Todo","todo","todoData","text","TodoList","onDeleteTodo","onDoneTodo","todoDatum","handleDeleteTodo","handleDoneTodo","copyDatum","rows","lastCategory","forEach","idx","todoDate","startDate","parentNode","matches","CompletedList","doneDatum","doneData","doneDate","doneYear","doneMonth","doneDay","doneYearMonth","doneYearMonthDate","concat","startYear","startMonth","startDay","startYearMonthDate","Container","setTodoDatum","setDoneDatum","isLoading","setIsLoading","useEffect","getTodoDatum","localStorage","getItem","getDoneDatum","saveData","useCallback","setItem","stringify","newTodoText","newTodoData","now","newTodoDatum","arrayedTodoDatum","sort","datum","datumType","deletedDatum","data","Number","deletedData","doneTodo","newDoneTodo","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e970441.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`${reset}`;\r\n\r\nexport default globalStyles;\r\n","// Container\r\nexport const compare = (key) => (a, b) =>\r\n  a[key] < b[key] ? 1 : a[key] > b[key] ? -1 : 0;\r\n\r\nexport const filter = (f, iter) => {\r\n  const arr = [];\r\n  for (const a of iter) {\r\n    if (f(a)) {\r\n      arr.push(a);\r\n    }\r\n  }\r\n  return arr;\r\n};\r\nexport const parseAndSet = (setFunc, dataName) => {\r\n  const pasredTodoDatum = JSON.parse(dataName);\r\n  setFunc(pasredTodoDatum);\r\n};\r\n\r\n// CompletedList, todoDateRow\r\nexport const makeDate = (date) => {\r\n  const dateObj = new Date(date);\r\n  const YEAR = dateObj.getFullYear();\r\n  const MONTH = dateObj.getMonth() + 1;\r\n  const DAY = dateObj.getDate();\r\n\r\n  return { year: YEAR, month: MONTH, day: DAY };\r\n};\r\n\r\nexport const log = console.log;\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Loader = () => (\r\n  <ReactLoading type={\"bubbles\"} color={\"blue\"} height={\"20%\"} width={\"20%\"} />\r\n);\r\n\r\nexport default Loader;\r\n","import React, { memo, useState } from \"react\";\r\n\r\nconst InputBar = (props) => {\r\n  const { onAddNewTodoText } = props;\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const handleInputTextChange = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const handleAddNewTodoText = (e) => {\r\n    onAddNewTodoText(inputText);\r\n    e.preventDefault();\r\n    setInputText(\"\");\r\n  };\r\n  return (\r\n    <form className=\"inputBar\" onSubmit={handleAddNewTodoText}>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Write to do!\"\r\n        value={inputText}\r\n        onChange={handleInputTextChange}\r\n      />\r\n      <ion-icon\r\n        id=\"add\"\r\n        name=\"add-outline\"\r\n        onClick={handleAddNewTodoText}\r\n      ></ion-icon>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default memo(InputBar);\r\n","import React, { memo } from \"react\";\r\nimport { makeDate } from \"./fs\";\r\n\r\nconst TodoDateRow = ({ date }) => {\r\n  const today = makeDate(date);\r\n  const { year, month } = today;\r\n  return <div className=\"todoDateRow\">{`${year}.${month}`}</div>;\r\n};\r\n\r\nexport default memo(TodoDateRow);\r\n","import React, { memo } from \"react\";\r\n\r\nconst Todo = memo(({ todoData }) => {\r\n  const todo = todoData.text;\r\n  return <div className=\"todo\">{todo}</div>;\r\n});\r\n\r\nexport default Todo;\r\n","import React, { memo } from \"react\";\r\nimport TodoDateRow from \"./TodoDateRow\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = (props) => {\r\n  const { onDeleteTodo, onDoneTodo, todoDatum } = props;\r\n\r\n  const onClickRouter = ({ target }) => {\r\n    const { id } = target.parentNode;\r\n\r\n    if (target.matches(\"#delete\")) {\r\n      handleDeleteTodo(id);\r\n    } else if (target.matches(\"#done\")) {\r\n      handleDoneTodo(id);\r\n    }\r\n  };\r\n  const handleDeleteTodo = (id) => {\r\n    onDeleteTodo(id, todoDatum, \"todoDatum\");\r\n  };\r\n  const handleDoneTodo = (id) => {\r\n    onDoneTodo(id, todoDatum);\r\n  };\r\n  const copyDatum = [...todoDatum];\r\n  const rows = [];\r\n  let lastCategory = null;\r\n\r\n  if (!copyDatum) return null;\r\n\r\n  copyDatum.forEach((todoData, idx) => {\r\n    if (todoData.todoDate !== lastCategory) {\r\n      rows.push(<TodoDateRow date={todoData.startDate} key={idx} />);\r\n    }\r\n    rows.push(\r\n      <div\r\n        className=\"todoData\"\r\n        key={todoData.startDate}\r\n        id={todoData.startDate}\r\n      >\r\n        <Todo todoData={todoData} />\r\n        <ion-icon\r\n          id=\"done\"\r\n          className=\"done\"\r\n          name=\"checkmark-circle-outline\"\r\n        ></ion-icon>\r\n        <ion-icon\r\n          id=\"delete\"\r\n          className=\"delete\"\r\n          name=\"close-circle-outline\"\r\n        ></ion-icon>\r\n      </div>\r\n    );\r\n    lastCategory = todoData.todoDate;\r\n  });\r\n  return (\r\n    <div onClick={onClickRouter} className=\"todoList\">\r\n      <div>{rows}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(TodoList);\r\n","import React, { memo } from \"react\";\r\nimport TodoDateRow from \"./TodoDateRow\";\r\nimport Todo from \"./Todo\";\r\nimport { makeDate } from \"./fs\";\r\n\r\nconst CompletedList = (props) => {\r\n  const { onDeleteTodo, doneDatum } = props;\r\n\r\n  const handleDeleteTodo = ({ target }) => {\r\n    if (!target.matches(\".todoData>ion-icon\")) return null;\r\n    onDeleteTodo(target.parentNode.parentNode.id, doneDatum, \"doneDatum\");\r\n  };\r\n  const rows = [];\r\n  let lastCategory = \"\";\r\n\r\n  doneDatum.forEach((doneData, idx) => {\r\n    const doneDate = makeDate(doneData.doneDate);\r\n    const { year: doneYear, month: doneMonth, day: doneDay } = doneDate;\r\n\r\n    const doneYearMonth = `${doneYear}.${doneMonth}`;\r\n    const doneYearMonthDate = doneYearMonth.concat(\".\", doneDay);\r\n\r\n    const startDate = makeDate(doneData.startDate);\r\n    const { year: startYear, month: startMonth, day: startDay } = startDate;\r\n    const startYearMonthDate = `${startYear}.${startMonth}.${startDay}`;\r\n\r\n    if (doneYearMonth !== lastCategory) {\r\n      rows.push(<TodoDateRow date={doneData.doneDate} key={idx} />);\r\n    }\r\n    rows.push(\r\n      <div\r\n        key={doneData.startDate}\r\n        onClick={handleDeleteTodo}\r\n        id={doneData.startDate}\r\n      >\r\n        <div className=\"period\">\r\n          {startYearMonthDate}~{doneYearMonthDate}\r\n        </div>\r\n        <div className=\"todoData\">\r\n          <Todo todoData={doneData} />\r\n          <ion-icon\r\n            id=\"delete\"\r\n            name=\"close-circle-outline\"\r\n            className=\"delete\"\r\n          ></ion-icon>\r\n        </div>\r\n      </div>\r\n    );\r\n    lastCategory = doneYearMonth;\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"title\">Completed</div>\r\n      <div className=\"doneList\">{rows}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(CompletedList);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport GlobalStyles from \"../GlobalStyles\";\nimport \"../css/style.scss\";\nimport { compare, filter, parseAndSet } from \"./fs\";\nimport Loader from \"../Loader\";\nimport InputBar from \"./InputBar\";\nimport TodoList from \"./TodoList\";\nimport CompletedList from \"./CompletedList\";\n\nconst Container = () => {\n  const [todoDatum, setTodoDatum] = useState([]);\n  const [doneDatum, setDoneDatum] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTodoDatum();\n  }, []);\n\n  const getTodoDatum = async () => {\n    const getTodoDatum = localStorage.getItem(\"todoDatum\");\n    const getDoneDatum = localStorage.getItem(\"doneDatum\");\n    if (getTodoDatum) {\n      parseAndSet(setTodoDatum, getTodoDatum);\n    }\n    if (getDoneDatum) {\n      parseAndSet(setDoneDatum, getDoneDatum);\n    }\n    setIsLoading(false);\n  };\n  const saveData = useCallback((name, todoDatum) => {\n    localStorage.setItem(name, JSON.stringify(todoDatum));\n  }, []);\n  const handleAddNewTodoText = useCallback(\n    (newTodoText) => {\n      if (!newTodoText) return null;\n\n      const newTodoData = {\n        text: newTodoText,\n        startDate: Date.now(),\n      };\n\n      const newTodoDatum = [...todoDatum];\n      const arrayedTodoDatum = [...newTodoDatum, newTodoData].sort(\n        compare(\"startDate\")\n      );\n      setTodoDatum(arrayedTodoDatum);\n\n      saveData(\"todoDatum\", arrayedTodoDatum);\n    },\n    [todoDatum, saveData]\n  );\n  const handleDeleteTodo = useCallback(\n    (key, datum, datumType) => {\n      let copyDatum = [...datum];\n\n      const deletedDatum = filter(\n        (data) => data.startDate !== Number(key),\n        copyDatum\n      );\n      const deletedData = filter((a) => a.startDate === Number(key), copyDatum);\n\n      datumType === \"todoDatum\"\n        ? setTodoDatum(deletedDatum)\n        : setDoneDatum(deletedDatum);\n      saveData(datumType, deletedDatum);\n\n      return deletedData;\n    },\n    [saveData]\n  );\n  const handleDoneTodo = useCallback(\n    (key, todoDatum) => {\n      let doneTodo = handleDeleteTodo(key, todoDatum, \"todoDatum\");\n      doneTodo[0].doneDate = Date.now();\n      let newDoneTodo = [...doneDatum, ...doneTodo].sort(compare(\"doneDate\"));\n\n      saveData(\"doneDatum\", newDoneTodo);\n      setDoneDatum(newDoneTodo);\n    },\n    [handleDeleteTodo, doneDatum, saveData]\n  );\n  return isLoading ? (\n    <div className={\"loader\"}>\n      <Loader />\n    </div>\n  ) : (\n    <div className=\"container\">\n      <GlobalStyles />\n      <div className=\"left\">\n        <InputBar onAddNewTodoText={handleAddNewTodoText} />\n        <TodoList\n          todoDatum={todoDatum}\n          onDeleteTodo={handleDeleteTodo}\n          onDoneTodo={handleDoneTodo}\n        />\n      </div>\n      <div className=\"right\">\n        <CompletedList doneDatum={doneDatum} onDeleteTodo={handleDeleteTodo} />\n      </div>\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Container from \"./component/Container\";\n\nReactDOM.render(<Container />, document.getElementById(\"root\"));\n"],"sourceRoot":""}