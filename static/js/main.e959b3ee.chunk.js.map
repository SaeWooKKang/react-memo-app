{"version":3,"sources":["GlobalStyles.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["globalStyles","createGlobalStyle","reset","Loader","type","color","height","width","TodoDateRow","date","this","props","className","React","Component","Todo","todo","todoData","text","TodoList","handleDeleteTodo","bind","handleDoneTodo","target","matches","onDeleteTodo","parentNode","id","onDoneTodo","rows","lastCategory","todoDatum","forEach","todoDate","push","name","onClick","InputBar","handleInputTextChange","handleAddNewTodoText","e","onInputTextChange","value","onAddNewTodoText","preventDefault","onSubmit","placeholder","newTodoText","onChange","CompletedList","doneDatum","doneData","doneDate","Date","doneYearMonth","getFullYear","getMonth","doneYearMonthDate","getDate","startDate","startYearMonthDate","console","log","Container","getTodoDatum","a","localStorage","getItem","getDoneDatum","JSON","parse","pasredTodoDatum","setState","parsedDoneDatum","isLoading","state","key","b","window","setItem","stringify","year","month","newTodoData","now","newTodoDatum","arrayedTodoDatum","sort","compare","saveData","datumType","copyDatum","index","findIndex","deletedData","splice","doneTodo","newDoneTodo","GlobalStyles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e959b3ee.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`${reset}`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Loader = () => (\r\n  <ReactLoading type={\"bubbles\"} color={\"blue\"} height={\"20%\"} width={\"20%\"} />\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport \"./style.scss\";\nimport Loader from \"./Loader\";\n\nclass TodoDateRow extends React.Component {\n  render() {\n    const date = this.props.date;\n\n    return <div className=\"todoDateRow\">{date}</div>;\n  }\n}\nclass Todo extends React.Component {\n  render() {\n    const todo = this.props.todoData.text;\n    return <div className=\"todo\">{todo}</div>;\n  }\n}\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteTodo = this.handleDeleteTodo.bind(this);\n    this.handleDoneTodo = this.handleDoneTodo.bind(this);\n  }\n  handleDeleteTodo({ target }) {\n    if (!target.matches(\".todoData>#delete\")) return null;\n    this.props.onDeleteTodo(target.parentNode.id, \"todoDatum\");\n  }\n  handleDoneTodo({ target }) {\n    if (!target.matches(\"div>#done\")) return null;\n    this.props.onDoneTodo(target.parentNode.id);\n  }\n  render() {\n    const rows = [];\n    let lastCategory = null;\n\n    if (!this.props.todoDatum) return;\n\n    this.props.todoDatum.forEach((todoData) => {\n      if (todoData.todoDate !== lastCategory) {\n        rows.push(\n          <TodoDateRow date={todoData.todoDate} key={todoData.todoDate} />\n        );\n      }\n      rows.push(\n        <div className=\"todoData\" key={todoData.id} id={todoData.id}>\n          <Todo todoData={todoData} />\n          <ion-icon\n            id=\"delete\"\n            className=\"delete\"\n            name=\"close-circle-outline\"\n          ></ion-icon>\n          <ion-icon\n            id=\"done\"\n            className=\"done\"\n            name=\"checkmark-circle-outline\"\n          ></ion-icon>\n        </div>\n      );\n      lastCategory = todoData.todoDate;\n    });\n\n    return (\n      <div onClick={this.handleDeleteTodo} className=\"todoList\">\n        <div onClick={this.handleDoneTodo}>{rows}</div>\n      </div>\n    );\n  }\n}\nclass InputBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputTextChange = this.handleInputTextChange.bind(this);\n    this.handleAddNewTodoText = this.handleAddNewTodoText.bind(this);\n  }\n  handleInputTextChange(e) {\n    this.props.onInputTextChange(e.target.value);\n  }\n  handleAddNewTodoText(e) {\n    this.props.onAddNewTodoText();\n    e.preventDefault();\n  }\n  render() {\n    return (\n      <form className=\"inputBar\" onSubmit={this.handleAddNewTodoText}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"write to do!\"\n          value={this.props.newTodoText}\n          onChange={this.handleInputTextChange}\n        />\n        <a>\n          {\" \"}\n          <ion-icon\n            id=\"add\"\n            name=\"add-outline\"\n            onClick={this.handleAddNewTodoText}\n          ></ion-icon>\n        </a>\n      </form>\n    );\n  }\n}\nclass CompletedList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteTodo = this.handleDeleteTodo.bind(this);\n  }\n  handleDeleteTodo({ target }) {\n    if (!target.matches(\".todoData>ion-icon\")) return null;\n    this.props.onDeleteTodo(target.parentNode.parentNode.id, \"doneDatum\");\n  }\n  render() {\n    const rows = [];\n    let lastCategory = \"\";\n    this.props.doneDatum.forEach((doneData) => {\n      const doneDate = new Date(doneData.doneDate);\n      const doneYearMonth = `${doneDate.getFullYear()}.${\n        doneDate.getMonth() + 1\n      }`;\n      const doneYearMonthDate = `${doneDate.getFullYear()}.${\n        doneDate.getMonth() + 1\n      }.${doneDate.getDate()}`;\n\n      const startDate = new Date(doneData.id);\n      const startYearMonthDate = `${startDate.getFullYear()}.${\n        startDate.getMonth() + 1\n      }.${startDate.getDate()}`;\n\n      if (doneYearMonth !== lastCategory) {\n        rows.push(<TodoDateRow date={doneYearMonth} key={doneData.doneDate} />);\n      }\n      rows.push(\n        <div key={doneData.id} onClick={this.handleDeleteTodo} id={doneData.id}>\n          <div className=\"period\">\n            {startYearMonthDate}~{doneYearMonthDate}\n          </div>\n          <div className=\"todoData\">\n            <Todo todoData={doneData} />\n            <ion-icon\n              id=\"delete\"\n              name=\"close-circle-outline\"\n              className=\"delete\"\n            ></ion-icon>\n          </div>\n        </div>\n      );\n      lastCategory = doneYearMonth;\n      console.log(lastCategory);\n    });\n    return (\n      <div>\n        <div className=\"title\">Completed</div>\n        <div className=\"doneList\">{rows}</div>\n      </div>\n    );\n  }\n}\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newTodoText: \"\",\n      todoDatum: [],\n      doneDatum: [],\n      isLoading: true,\n    };\n\n    this.handleInputTextChange = this.handleInputTextChange.bind(this);\n    this.handleAddNewTodoText = this.handleAddNewTodoText.bind(this);\n    this.handleDeleteTodo = this.handleDeleteTodo.bind(this);\n    this.handleDoneTodo = this.handleDoneTodo.bind(this);\n  }\n\n  getTodoDatum = async () => {\n    const getTodoDatum = localStorage.getItem(\"todos\");\n    const getDoneDatum = localStorage.getItem(\"doneTodos\");\n\n    if (getTodoDatum) {\n      const pasredTodoDatum = await JSON.parse(getTodoDatum);\n      this.setState({\n        todoDatum: pasredTodoDatum,\n      });\n    }\n    if (getDoneDatum) {\n      const parsedDoneDatum = await JSON.parse(getDoneDatum);\n      this.setState({\n        doneDatum: parsedDoneDatum,\n      });\n    }\n    this.setState({\n      isLoading: false,\n    });\n  };\n  componentDidMount() {\n    this.getTodoDatum();\n  }\n  compare(key) {\n    return (a, b) => (a[key] < b[key] ? 1 : a[key] > b[key] ? -1 : 0);\n  }\n  saveData(name, todoDatum) {\n    window.localStorage.setItem(name, JSON.stringify(todoDatum));\n  }\n  handleInputTextChange(newTodoText) {\n    this.setState({\n      newTodoText: newTodoText,\n    });\n  }\n  handleAddNewTodoText() {\n    if (!this.state.newTodoText) return;\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n\n    const newTodoData = {\n      todoDate: `${year}.${month}`,\n      text: this.state.newTodoText,\n      id: Date.now(),\n    };\n\n    const newTodoDatum = this.state.todoDatum;\n    const arrayedTodoDatum = [...newTodoDatum, newTodoData].sort(\n      this.compare(\"id\")\n    );\n\n    this.setState({\n      todoDatum: arrayedTodoDatum,\n      newTodoText: \"\",\n    });\n    this.saveData(\"todos\", arrayedTodoDatum);\n  }\n  handleDeleteTodo(key, datumType) {\n    if (datumType == \"todoDatum\") {\n      let copyDatum = [...this.state.todoDatum];\n      const index = copyDatum.findIndex((todoData) => todoData.id == key);\n\n      const deletedData = copyDatum.splice(index, 1);\n\n      this.setState({\n        todoDatum: copyDatum,\n      });\n\n      this.saveData(\"todos\", copyDatum);\n      return deletedData;\n    } else if (datumType == \"doneDatum\") {\n      let copyDatum = [...this.state.doneDatum];\n      const index = copyDatum.findIndex((todoData) => todoData.id == key);\n\n      copyDatum.splice(index, 1);\n\n      this.setState({\n        doneDatum: copyDatum,\n      });\n\n      this.saveData(\"doneTodos\", copyDatum);\n    }\n  }\n  handleDoneTodo(key) {\n    let doneTodo = this.handleDeleteTodo(key, \"todoDatum\");\n    doneTodo[0].doneDate = Date.now();\n    let newDoneTodo = [...this.state.doneDatum, ...doneTodo].sort(\n      this.compare(\"doneDate\")\n    );\n\n    this.saveData(\"doneTodos\", newDoneTodo);\n    this.setState({\n      doneDatum: newDoneTodo,\n    });\n  }\n  render() {\n    //if (this.state.isLoading) return <Loader />;\n    return this.state.isLoading ? (\n      <Loader />\n    ) : (\n      <div className=\"container\">\n        <GlobalStyles />\n        <div className=\"left\">\n          <InputBar\n            newTodoText={this.state.newTodoText}\n            onInputTextChange={this.handleInputTextChange}\n            onAddNewTodoText={this.handleAddNewTodoText}\n          />\n          <TodoList\n            newTodoText={this.state.newTodoText}\n            onAddNewTodoText={this.handleAddNewTodoText}\n            todoDatum={this.state.todoDatum}\n            onDeleteTodo={this.handleDeleteTodo}\n            onDoneTodo={this.handleDoneTodo}\n          />\n        </div>\n        <div className=\"right\">\n          <CompletedList\n            doneDatum={this.state.doneDatum}\n            onDeleteTodo={this.handleDeleteTodo}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Container;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Container from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<Container />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}