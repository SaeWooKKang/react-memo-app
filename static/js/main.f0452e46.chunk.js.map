{"version":3,"sources":["GlobalStyles.js","Loader.js","components/InputBar.jsx","components/fs.js","components/TodoDateRow.jsx","components/Todo.jsx","components/TodoList.jsx","components/CompletedList.jsx","redux/reducers/memoSlice.js","components/LandingPage.js","redux/store.js","index.js"],"names":["globalStyles","createGlobalStyle","reset","Loader","type","color","height","width","InputBar","saveLocalAndStore","useState","inputText","setInputText","todoDatum","useSelector","memo","handleAddNewTodoText","e","go","preventDefault","makeTodoObj","each","_","text","map","t","startDate","Date","now","obj","className","onSubmit","placeholder","value","onChange","target","id","name","onClick","makeDate","date","dateObj","year","getFullYear","month","getMonth","day","getDate","saveLocal","curry","localStorage","setItem","JSON","stringify","dateArr","Object","entries","YMD","count","take","join","array","a","diffrent","b","push","arr","TodoDateRow","Todo","todoText","TodoList","props","onDeleteTodo","doneDatum","onDoneTodo","useCallback","key","doneTodo","doneTodo2","flat","object","sort","compare","lastCategory","tmpl","parentNode","matches","CompletedList","handleDeleteTodo","doneDate","doneYearMonth","doneYearMonthDate","startYearMonthDate","memoSlice","createSlice","initialState","isLoading","reducers","put","state","payload","stateName","fetchLocalStorageData","action","parse","getItem","actions","Container","dispatch","useDispatch","getTodoDatum","useEffect","dataType","newTexts","todos","datum","datumType","deletedData","deletedDatum","reject","data","Number","GlobalStyles","store","configureStore","reducer","memoReducer","ReactDOM","render","LandingPage","document","getElementById"],"mappings":"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","file":"static/js/main.f0452e46.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`${reset}`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Loader = () => (\r\n  <ReactLoading type={\"bubbles\"} color={\"blue\"} height={\"20%\"} width={\"20%\"} />\r\n);\r\n\r\nexport default Loader;\r\n","import React, { memo, useState } from \"react\";\r\nimport { go, each, map } from 'fxjs';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst InputBar = ({saveLocalAndStore}) => {\r\n  const [inputText, setInputText] = useState('');\r\n\r\n  const todoDatum = useSelector(({ memo }) => memo.todoDatum);\r\n\r\n  const handleInputTextChange = ({target: {value}}) => setInputText(value);\r\n  \r\n  const handleAddNewTodoText = e => go(\r\n    (e.preventDefault(), makeTodoObj(inputText)), //  [[{}]]\r\n    each(saveLocalAndStore('todoDatum')), // [{}]\r\n    each(_ => setInputText(\"\")),\r\n  );\r\n\r\n  // 입력받은 text를 객체로 만들고,\r\n  //  기존 state와 병합 \r\n  const makeTodoObj = text => go(\r\n    text ? [text] : [],\r\n    map(t => ({ text: t, startDate: Date.now() })), // [{}]\r\n    map(obj => [obj, ...todoDatum]), // [[{}]]\r\n  );\r\n\r\n  return (\r\n    <form className=\"inputBar\" onSubmit={ handleAddNewTodoText }>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Write to do!\"\r\n        value={ inputText }\r\n        onChange={ handleInputTextChange }\r\n      />\r\n      <ion-icon\r\n        id=\"add\"\r\n        name=\"add-outline\"\r\n        onClick={ handleAddNewTodoText }\r\n      ></ion-icon>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default memo(InputBar);\r\n","import { curry, go, map, take, join } from 'fxjs';\r\n\r\nexport const compare = (key) => (a, b) =>\r\n  a[key] < b[key] ? 1 : a[key] > b[key] ? -1 : 0;\r\n\r\n// CompletedList, todoDateRow\r\nexport const makeDate = date => {\r\n  const dateObj = new Date(date);\r\n  const YEAR = dateObj.getFullYear();\r\n  const MONTH = dateObj.getMonth() + 1;\r\n  const DAY = dateObj.getDate();\r\n\r\n  return { year: YEAR, month: MONTH, day: DAY };\r\n};\r\n\r\nexport const saveLocal = curry((name, todoDatum) => {\r\n  localStorage.setItem(name, JSON.stringify(todoDatum));\r\n});\r\n\r\n// [2022, 3, 19]\r\nexport const dateArr = date => go(\r\n  makeDate(date), // {}\r\n  Object.entries, // [ [], [], [] ]\r\n  map( ([_, v]) => v), // [2022, 3, 19]\r\n);\r\n\r\n// 2022.3.19 or 2022.3 or 2022\r\nexport const YMD = (date, count = 3) => go(\r\n  dateArr(date),\r\n  take(count), // [2022, 3]\r\n  join('.'), // 2022.3\r\n);\r\n\r\nexport const array = (...a) => [...a];\r\nexport const diffrent = (a, b) => a !== b;\r\nexport const push = curry((a, arr) => (arr.push(a), arr));","import React, { memo } from \"react\";\r\nimport { makeDate } from \"./fs\";\r\n\r\nconst TodoDateRow = ({ date }) => {\r\n  const { year, month } = makeDate(date);\r\n\r\n  return <div className=\"todoDateRow\">{`${year}.${month}`}</div>;\r\n};\r\n\r\nexport default memo(TodoDateRow);\r\n","import React, { memo } from \"react\";\r\n\r\nconst Todo = memo(({ todoText }) => <div className=\"todo\">{ todoText }</div>)\r\n\r\nexport default Todo;\r\n","import React, { memo, useCallback } from \"react\";\r\nimport TodoDateRow from \"./TodoDateRow\";\r\nimport Todo from \"./Todo\";\r\nimport { compare, array, diffrent, push, YMD } from './fs';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { go, map, each, entries, flat, object } from 'fxjs';\r\n\r\nconst TodoList = props => {\r\n  const { onDeleteTodo, saveLocalAndStore } = props;\r\n\r\n  const todoDatum = useSelector(({ memo }) => memo.todoDatum);\r\n  const doneDatum = useSelector(({ memo }) => memo.doneDatum);\r\n\r\n  const onClickRouter = ({ target }) => {\r\n    const { id } = target.parentNode;\r\n\r\n    target.matches(\"#delete\") \r\n      ? onDeleteTodo(id, todoDatum, \"todoDatum\") \r\n      : target.matches(\"#done\") && onDoneTodo(id, todoDatum);\r\n  };\r\n\r\n  const onDoneTodo = useCallback(\r\n    (key, todoDatum) => {\r\n\r\n      // 완료된 데이터를 얻음\r\n      const doneTodo = onDeleteTodo(key, todoDatum, \"todoDatum\"); // [{text: \"1\", startDate: 16, doneDate: null}] \r\n\r\n      // 참조에 의한 전달 지우기\r\n      let doneTodo2 = flat(map(entries, doneTodo)); // [ [], [] ]\r\n\r\n      // 완료 날짜 추가\r\n      doneTodo2.push(['doneDate', Date.now()]); // [ [], [], [] ]\r\n\r\n      // 객체로 바꾸고, 기존 데이터 병합, 정렬 \r\n      go(\r\n        [doneTodo2], // [ [[], [], []] ]\r\n        map(object), // [{}]\r\n        map(obj => [obj, ...doneDatum]), // [ [{}, {} ...] ]\r\n        each(arr => doneTodo2 = arr.sort(compare('doneDate'))) // [{}] \r\n      );\r\n      \r\n      // store에 put 하므로 데이터 가공해서 보내야 함 \r\n      saveLocalAndStore('doneDatum', doneTodo2);\r\n    },\r\n    [onDeleteTodo, doneDatum, saveLocalAndStore]\r\n  );\r\n\r\n  let lastCategory = null;\r\n\r\n  // [ <div>1</div>, <div>2</div> ]\r\n  const tmpl = go(\r\n    todoDatum,\r\n    map(({ startDate, text }) => \r\n      go(\r\n        array(\r\n          diffrent(YMD(startDate, 2), lastCategory) \r\n            && <TodoDateRow date={ startDate } key={ startDate + 10 } />),\r\n        each(_ => lastCategory = YMD(startDate, 2)), \r\n        push( \r\n          <div className=\"todoData\" key={ startDate } id={ startDate }>\r\n            <Todo todoText={ text } />\r\n            <ion-icon id=\"done\" className=\"done\" name=\"checkmark-circle-outline\"></ion-icon>\r\n            <ion-icon id=\"delete\" className=\"delete\"name=\"close-circle-outline\"></ion-icon>\r\n          </div>))) \r\n  );\r\n\r\n  return (\r\n    <div onClick={ onClickRouter } className=\"todoList\">\r\n      <div>{ todoDatum && tmpl }</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(TodoList);\r\n","import React, { memo } from \"react\";\r\nimport TodoDateRow from \"./TodoDateRow\";\r\nimport Todo from \"./Todo\";\r\nimport { YMD, diffrent, array, push } from \"./fs\";\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { go, each, map } from 'fxjs';\r\n\r\nconst CompletedList = ({ onDeleteTodo }) => {\r\n  \r\n  const doneDatum = useSelector(({ memo }) => memo.doneDatum );\r\n\r\n  const handleDeleteTodo = ({ target }) => target.matches(\"#delete\") && \r\n    onDeleteTodo(target.parentNode.parentNode.id, doneDatum, \"doneDatum\");\r\n  \r\n  let lastCategory = \"\";\r\n  \r\n  // [ <div>1</div>, <div>2</div> ]\r\n  const tmpl = go(\r\n    doneDatum,\r\n    map(({ startDate, doneDate, text }) => {\r\n\r\n      const doneYearMonth = YMD(doneDate, 2);\r\n      const doneYearMonthDate = YMD(doneDate);\r\n      const startYearMonthDate = YMD(startDate);\r\n\r\n      return go(\r\n        array( \r\n          diffrent(doneYearMonth, lastCategory) \r\n            && <TodoDateRow date={ doneDate } key={ doneDate } />),\r\n        each(_ => lastCategory = doneYearMonth),\r\n        push(\r\n          <div key={ startDate } onClick={ handleDeleteTodo } id={ startDate }>\r\n              <div className=\"period\">\r\n                { startYearMonthDate }~{ doneYearMonthDate }\r\n              </div>\r\n              <div className=\"todoData\">\r\n                <Todo todoText={ text } />\r\n                <ion-icon id=\"delete\" name=\"close-circle-outline\" className=\"delete\" ></ion-icon>\r\n              </div>\r\n          </div>))}) \r\n  );\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"title\">Completed</div>\r\n      <div className=\"doneList\">{ tmpl }</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(CompletedList);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  todoDatum: [],\r\n  doneDatum: [],\r\n  isLoading: true,\r\n};\r\n\r\nexport const memoSlice = createSlice({\r\n  name: 'memo',\r\n  initialState,\r\n  reducers: {\r\n    put: (state, { payload }) => { state[payload.stateName] = payload.value },\r\n    fetchLocalStorageData: ( state, action ) => { state[action.payload]= JSON.parse(localStorage.getItem(action.payload)) || []},\r\n  }\r\n});\r\n\r\nexport const { put, fetchLocalStorageData } = memoSlice.actions;\r\n\r\nexport default memoSlice.reducer;","import React, { useEffect, useCallback } from \"react\";\r\nimport GlobalStyles from \"../GlobalStyles\";\r\nimport \"../css/style.scss\";\r\nimport Loader from \"../Loader\";\r\nimport InputBar from \"./InputBar\";\r\nimport TodoList from \"./TodoList\";\r\nimport CompletedList from \"./CompletedList\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { put, fetchLocalStorageData } from '../redux/reducers/memoSlice';\r\n\r\nimport { saveLocal } from './fs';\r\nimport { go, each, reject, curry } from 'fxjs';\r\n\r\nconst Container = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { isLoading } = useSelector(state => state.memo);\r\n\r\n  // localStorage 데이터 state에 저장\r\n  const getTodoDatum = useCallback(() => {\r\n    dispatch(fetchLocalStorageData('todoDatum'));\r\n    dispatch(fetchLocalStorageData('doneDatum'));\r\n    dispatch(put({stateName: 'isLoading', value: false}));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => getTodoDatum(), [getTodoDatum]);\r\n\r\n  // localStorage, state 저장\r\n  const saveLocalAndStore = curry((dataType, newTexts) => go(\r\n    [newTexts], // [[{}]]\r\n    each(saveLocal(dataType)),\r\n    each(todos => dispatch(put( { stateName: dataType, value: todos } )))\r\n  ));\r\n  \r\n  // TodoList, CompletedList 사용\r\n  const handleDeleteTodo = useCallback((key, datum, datumType) => {\r\n    const deletedData = [];\r\n\r\n    // 삭제할 데이터를 push하고, 나머지 반환\r\n    const deletedDatum = reject(data =>\r\n      data.startDate === Number(key) ? (deletedData.push(data), true) : false, datum);\r\n    \r\n    saveLocalAndStore(datumType, deletedDatum);\r\n\r\n    return deletedData;\r\n  }, [saveLocalAndStore]);\r\n\r\n  return isLoading \r\n    ? (<div className=\"loader\"><Loader /></div>) \r\n    : (<div className=\"container\">\r\n        <GlobalStyles />\r\n        <div className=\"left\">\r\n          <InputBar saveLocalAndStore={saveLocalAndStore}/>\r\n          <TodoList \r\n            saveLocalAndStore={ saveLocalAndStore } onDeleteTodo={ handleDeleteTodo }/>\r\n        </div>\r\n        <div className=\"right\">\r\n          <CompletedList onDeleteTodo={ handleDeleteTodo } />\r\n        </div>\r\n      </div>);\r\n};\r\n\r\nexport default Container;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport memoReducer from './reducers/memoSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    memo: memoReducer\r\n  }\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport {store} from './redux/store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <LandingPage />\r\n  </Provider>\r\n, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}